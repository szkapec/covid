{"version":3,"sources":["components/Fetch/StyleFetch.js","components/Loading/LoadingIndicator.js","components/Fetch/FetchCountryAll.js","components/Pages/AllInfection/AllInfection.js","components/Chart/Chart.js","components/Fetch/FetchStatisticPoland.js","components/Pages/MainPages/MainPages.js","components/Fetch/FetchCountryPoland.js","components/Fetch/FetchCountryPolandProvince.js","components/Pages/ToDayInfection/ToDayInfection.js","components/Pages/Navbar/Navbar.js","components/Pages/404/Error.js","components/Fetch/FetchCountryRandom.js","components/Pages/Country/Country.js","App.js","index.js"],"names":["StyledWrapper","styled","div","StyledUl","ul","StyledLi","li","StyledTitle","StyledWrapperTitle","LiStyl","UlStyl","DescriptionStyl","flip","keyframes","Root","Content","theme","LoadingIndicator","useState","count","setCount","useEffect","setTimeout","style","backgroundColor","color","FetchCountryAll","state","allCases","newCases","newDead","criticalState","allTotalCases","allTotalDead","allTotalRecovered","countryTab","day","follow","fetch","then","api","ok","json","i","countries_stat","setState","world_total","active_cases","new_cases","new_deaths","serious_critical","total_cases","total_deaths","total_recovered","statistic_taken_at","catch","err","console","log","foolowScanBig","map","item","StyledWrapperBig","value","parseInt","cases","key","country_name","deaths","total_tests","foolowScanSmall","index","StyledWrapperSmall","StyledSpanAbsolute","this","props","allState","newCasesProps","globalCasesProps","StyledProps","StyledDay","LiStyleMainPages","DescriptionStylMainPages","textAlign","TeenCountriesProps","minDeviceWidth","matches","StyledTable","Component","table","tr","span","AllInfection","Chart","newDeaths","active","activeNew","recovered","total","totalDeaths","Chart0","tests","Chart1","Chart2","Chart3","Chart4","Chart5","Chart6","toDay","className","bar","data","labels","datasets","label","fontSize","width","height","options","title","display","displayTitle","text","legend","position","legendPosition","layout","padding","left","right","bottom","top","line","pie","React","defaultProps","displeyLegend","titleText","FetchStatisticPoland","firstDay","tabsToChart","wykonaj","length","push","Active","error","StyledFirstDay","MainPages","FetchCountryPoland","country","newConfirmed","newRecovery","totalInfection","totalDead","totalRecovery","zmien","globalNewConfirmed","globalNewDead","globalNewRecovered","globalTotalConfirmed","globalTotalDeaths","globalTotalRecovered","performSummary","Countries","Country","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","Global","polishInfo","paddingTop","global","poland","FetchCountryPolandProvince","lubelskieInfected","LubelskieDead","all","performProvince","infectedByRegion","infectedCount","deceasedCount","region","ToDayInfection","Navbar","changeNavbar","x","document","getElementById","StyledTopNav","id","exact","to","activeStyle","fontWeight","onClick","nav","Error","margin","StyledSpan","location","pathname","StyledButton","Styleddiv","FetchCountryRandom","countryApi","fetchCountry","response","new","changeInput","e","target","sumbit","placeholder","type","onChange","StyledContainer","StyledCard","StyledH2","StyledH3","StyledActive","StyledSpanLeft","fontFamily","toFixed","StyledSpanRight","marginLeft","h2","App","basename","process","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.19e3b19c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledWrapper = styled.div`\r\n    background-color: #1c1e27;\r\n    color: white;\r\n`\r\nexport const StyledUl = styled.ul`\r\ntext-decoration: none;\r\nlist-style: none;\r\n`\r\n\r\nexport const StyledLi = styled.li`\r\n    margin: 10px 0;\r\n    font-size: 14px;\r\n    color: #ecf0f1;\r\n    font-family: 'Baloo 2', cursive;\r\n`\r\n\r\nexport const StyledTitle = styled.div`\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    padding: 10px;\r\n    text-align: center;\r\n`\r\n\r\nexport const StyledWrapperTitle = styled.div`\r\n    background-color: #273c75;\r\n    width: 70%;\r\n    margin: 20px auto;\r\n    border-radius:10px;\r\n    color: white;\r\n    font-family: 'Baloo 2', cursive;\r\n    max-width: 800px;\r\n\r\n`\r\n\r\n\r\n\r\nexport const LiStyl = styled(StyledLi)`\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-family: 'Baloo 2', cursive;\r\n    font-weight: 700;\r\n    `\r\nexport const UlStyl = styled(StyledUl)`\r\n    padding: 0;\r\n    position:relative;\r\n\r\n`\r\nexport const DescriptionStyl = styled.div`\r\n    padding: 0;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-family: 'Baloo 2', cursive;\r\n    color: #95a5a6;\r\n\r\n`","import React, {useEffect, useState } from 'react'\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst flip = keyframes`\r\n    0%,100% {\r\n        animation-timing-function: cubic-bezier(0.5,0,1,0.5)\r\n    }\r\n    0% {\r\n        transform: rotateY(0deg);\r\n    }\r\n    50% {\r\n        transform: rotateY(1800deg);\r\n        animation-timing-function: cubic-bezier(0,0.5,0.5,1)\r\n    }\r\n    100% {\r\n        transform: rotateY(3600deg);\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Root = styled.div`\r\n    display: inline-block;\r\n    transform: translateZ(1px);\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: inline-block;\r\n    width: 64px;\r\n    height: 64px;\r\n    border-radius: 50%;\r\n    background: ${({theme})=> '#7f8c8d'};\r\n    animation: ${flip} 2.4s cubic-bezier(0,0.2,0.8,1) infinite;\r\n    margin: 10px auto;\r\n    @media(min-width: 400px) {\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default function LoadingIndicator() {\r\n    const [count, setCount] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => setCount(false), 6000);\r\n    },[])\r\n\r\n    return (\r\n        <div style={{backgroundColor:\"#1c1e27\", color:\"white\"}}>\r\n            {count?\r\n            <>\r\n            <div>Wczytuje dane...</div>\r\n            <Root>\r\n                    <Content/>\r\n            </Root> </>: \r\n            <div>\r\n                Błąd serwera prosze spróbować póżniej.    \r\n            </div>}            \r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\nimport {StyledWrapper, StyledUl, StyledTitle, StyledWrapperTitle, LiStyl, UlStyl, DescriptionStyl} from './StyleFetch';\r\nimport styled from 'styled-components';\r\nimport MediaQuery from 'react-responsive';\r\nimport LoadingIndicatior from '../Loading/LoadingIndicator';\r\n\r\nexport default class FetchCountryAll extends Component {\r\n\r\n    state = { allCases: '', newCases: '', newDead: '', criticalState: '', allTotalCases: '', allTotalDead: '', allTotalRecovered: '', countryTab: [], day: '',}\r\n\r\n    componentDidMount() {\r\n        this.follow();\r\n    }\r\n\r\n    follow = () => {\r\n        fetch(\"https://corona-virus-world-and-india-data.p.rapidapi.com/api\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": \"corona-virus-world-and-india-data.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"40ddf12a2emsh06a2fa2ebef5ecbp10fb02jsn4827ba559849\"\r\n            }\r\n        })\r\n    .then(api=> {\r\n        if(api.ok){\r\n            return api\r\n        }\r\n    })\r\n    .then(api => api.json())\r\n    .then(api => {\r\n        let countryTab = [];\r\n        for(var i = 0; i<10; i++) {\r\n            countryTab[i] = api.countries_stat[i]\r\n        }\r\n        this.setState({\r\n            allCases: api.world_total.active_cases,\r\n            newCases: api.world_total.new_cases,\r\n            newDead: api.world_total.new_deaths,\r\n            criticalState: api.world_total.serious_critical,\r\n            allTotalCases: api.world_total.total_cases,\r\n            allTotalDead: api.world_total.total_deaths,\r\n            allTotalRecovered: api.world_total.total_recovered,\r\n            countryTab: countryTab,\r\n            day: api.statistic_taken_at,\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\n    foolowScanBig = () => (\r\n        this.state.countryTab.map(item=> {\r\n                return (\r\n                        <StyledWrapperBig value={parseInt(item.cases)} key={item.country_name}>\r\n                            <th>{item.country_name}</th>\r\n                            <th>{item.active_cases}</th>\r\n                            <th>{item.new_cases}</th>\r\n                            <th>{item.new_deaths}</th>\r\n                            \r\n                            \r\n                            <th>{item.cases}</th>\r\n                            <th>{item.deaths}</th>\r\n                            <th>{item.total_tests}</th>\r\n                            <th>{item.total_recovered}</th>\r\n                        </StyledWrapperBig>\r\n            )\r\n        })\r\n    )\r\n    foolowScanSmall = () => (\r\n        this.state.countryTab.map((item,index)=> {\r\n            return (\r\n                <StyledWrapperSmall value={parseInt(item.cases)} key={item.country_name}>\r\n                    <UlStyl key={item.country_name}> \r\n                        <StyledSpanAbsolute>{index+1}</StyledSpanAbsolute>\r\n                        <StyledLi><b>Państwo: {item.country_name}</b></StyledLi>\r\n                        <StyledLi>Liczba chorych: {item.active_cases}</StyledLi>\r\n                        <StyledLi>Nowe przypadki: {item.new_cases}</StyledLi>\r\n                        <StyledLi>Nowe zgony: {item.new_deaths}</StyledLi>\r\n                        <StyledLi>Wszystkich przypadków: {item.cases}</StyledLi>\r\n                        <StyledLi>Wszystkich zgonów: {item.deaths}</StyledLi>\r\n                        <StyledLi>Zrobionych testów: {item.total_tests}</StyledLi>\r\n                        <StyledLi>Osób wyzdrowiałych: {item.total_recovered}</StyledLi>\r\n                    </UlStyl>\r\n                </StyledWrapperSmall>\r\n            )\r\n        })\r\n    )\r\n\r\nrender() {\r\n    const {allCases,newCases,newDead ,criticalState ,allTotalCases ,allTotalDead ,allTotalRecovered, day } = this.state;\r\n    return (\r\n        <div>\r\n            \r\n            {this.props.allState?(<>\r\n               \r\n            </>): null}\r\n\r\n\r\n\r\n            {this.props.newCasesProps ? (<><StyledWrapperTitle><StyledTitle>Coronavirus wykaz wszystkich zakażeń</StyledTitle></StyledWrapperTitle>\r\n           <UlStyl>\r\n                {newCases?<><LiStyl>Nowe przypadki: </LiStyl> <DescriptionStyl>{newCases} osób.</DescriptionStyl> \r\n                <LiStyl>Zgony: </LiStyl> <DescriptionStyl>{newDead} osób</DescriptionStyl> \r\n                <LiStyl>W stanie krytycznym:  </LiStyl> <DescriptionStyl>{criticalState} osób</DescriptionStyl> \r\n                <LiStyl>Liczba chorych:  </LiStyl> <DescriptionStyl>{allCases} osób</DescriptionStyl></>:null}\r\n           </UlStyl></>):null}\r\n            \r\n            \r\n            {this.props.globalCasesProps&&(<UlStyl>\r\n                {allTotalCases?\r\n                <>\r\n                {this.props.StyledProps?\r\n                (<>\r\n                        <StyledDay>Aktualizacja z dnia <div> <b>{day}</b></div> </StyledDay>\r\n                        <LiStyleMainPages>Wszystkie przypadki Covid:</LiStyleMainPages> <DescriptionStylMainPages> {allTotalCases} </DescriptionStylMainPages>\r\n                        <LiStyleMainPages>Wszystkie zgony:</LiStyleMainPages> <DescriptionStylMainPages>{allTotalDead} </DescriptionStylMainPages> \r\n                        <LiStyleMainPages>Uzdrowieni: </LiStyleMainPages> <DescriptionStylMainPages>{allTotalRecovered} </DescriptionStylMainPages>\r\n                        \r\n                </>\r\n                \r\n                ) : (\r\n                    <>\r\n                        <LiStyl>Wszystkie przypadki Covid:</LiStyl> <DescriptionStyl> {allTotalCases} osób</DescriptionStyl>\r\n                        <LiStyl>Wszystkie zgony:</LiStyl> <DescriptionStyl>{allTotalDead} osób</DescriptionStyl> \r\n                        <LiStyl>Uzdrowieni: </LiStyl> <DescriptionStyl>{allTotalRecovered} osób</DescriptionStyl>\r\n                    </>\r\n                )}\r\n                </>\r\n                :<>\r\n                <div style={{textAlign:'center'}}><LoadingIndicatior/></div>\r\n                </>\r\n                }\r\n            </UlStyl>)}\r\n\r\n\r\n                {this.props.TeenCountriesProps&&(<>\r\n                    {allTotalCases&& <StyledWrapperTitle><StyledTitle>  Państwa z największą ilością zachorowań: </StyledTitle></StyledWrapperTitle>}\r\n           \r\n                    <MediaQuery minDeviceWidth={900}>\r\n                     {(matches) => {\r\n                         if (!matches) {\r\n                         return this.foolowScanSmall()\r\n                         } else {\r\n                         return allTotalCases&&<StyledTable>\r\n                         <thead style={{backgroundColor:'#ecf0f1'}}>\r\n                         <tr>\r\n                             <th>Państwo</th>\r\n                             <th>Liczba chorych</th>\r\n                             <th>Nowe przypadki</th>\r\n                             <th>Nowych zgonów:</th>\r\n                             \r\n                             \r\n                             <th>Wszystkich przypadków</th>\r\n                             <th>Wszystkich zgonów</th>\r\n                             <th>Zrobionych testów</th>\r\n                             <th>Osób wyzdrowiałych</th>\r\n                         </tr>\r\n                         </thead> \r\n                         <tbody>\r\n                             {this.foolowScanBig()}\r\n                         </tbody>\r\n                     </StyledTable>;\r\n                         }\r\n                     }}\r\n                     </MediaQuery></>\r\n                )}\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst StyledTable = styled.table`\r\n    padding: 20px 10px;\r\n    border: 1px solid black;\r\n    width: 90%;\r\n    margin: 20px auto;\r\n    max-width: 1200px;\r\n    th, td {\r\n  padding: 15px;\r\n  text-align: center;\r\n  border: 1px solid #bdc3c7;\r\n}\r\n`\r\n\r\nconst StyledLi = styled.li`\r\n    margin: 10px 0;\r\n    text-align: left;\r\n    padding: 0;\r\n    text-align:center;\r\n    font-size: 13px;\r\n    :first-of-type{\r\n        font-size: 25px;\r\n        margin-bottom: 5px;\r\n        \r\n    }\r\n    :nth-child(2) {\r\n        font-size: 19px;\r\n    }\r\n    :nth-child(3) {\r\n        font-size: 18px;\r\n    }\r\n\r\n    \r\n    @media(min-width: 350px) {\r\n        font-size: 15px;\r\n        :nth-child(1){\r\n        font-size: 18px;\r\n    }\r\n    }\r\n    @media(min-width:400px){\r\n        font-size: 18px;\r\n        :nth-child(1){\r\n        font-size: 20px;\r\n    }\r\n    }\r\n`\r\nconst StyledWrapperSmall = styled.div`\r\n    background-color: ${({value}) => value===1 || value > 250 ? '#660033' : value > 200 ? '#330033' : value>150 ? '#000033' : '#262626' };\r\n    margin: 40px;\r\n    color: white;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    font-family: 'Baloo 2', cursive;\r\n    margin: 0px 20px;\r\n    margin-top: 40px;\r\n    @media(min-width: 350px) {\r\n        margin: 40px;\r\n    }\r\n    ul {\r\n            li:first-of-type{\r\n                border-bottom: 2px solid ${({value}) => value===1 || value > 250 ? 'rgba(140,0,51,0.7)' : value > 200 ? '#8e44ad' : value>150 ? '#192a56' : '#95a5a6' };\r\n        }\r\n    }\r\n\r\n`\r\nconst StyledWrapperBig = styled.tr`\r\n    background-color: ${({value}) => value===1 || value > 250 ? '#c0392b' : value > 200 ? '#f39c12' : value>150 ? '#f1c40f' : '#2ecc71' };\r\n    margin: 40px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    font-family: 'Baloo 2', cursive;\r\n    margin: 0px 20px;\r\n    margin-top: 40px;\r\n    @media(min-width: 350px) {\r\n        margin: 40px;\r\n    }\r\n\r\n`\r\n\r\nconst LiStyleMainPages = styled.li`\r\n    text-align: center;\r\n    font-family: 'Baloo 2', cursive;\r\n    font-weight: 700;\r\n    font-size: 18px;\r\n    padding-top: 30px;\r\n    color: white;\r\n`\r\n\r\nconst DescriptionStylMainPages = styled.div`\r\n    text-align: center;\r\n    font-family: 'Baloo 2', cursive;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    width: 80%;\r\n    margin: 10px auto;\r\n    background-color: #3498db;\r\n    height: 50px;\r\n    border-radius: 15px;\r\n    padding-top: 8px;\r\n    color: black;\r\n`\r\n\r\nconst StyledDay = styled.div`\r\n    text-align: center;\r\n    font-family: 'Josefin Sans',sans-serif;\r\n    margin: 10px auto;\r\n    color: #bdc3c7;\r\n`\r\nconst StyledSpanAbsolute = styled.span`\r\n    position: absolute;\r\n    top: 0px; \r\n    left: 10px;\r\n    color: white;\r\n    font-size: 18px;\r\n`\r\n","import React from 'react'\r\nimport FetchCountryAll from '../../Fetch/FetchCountryAll';\r\n\r\nexport default function AllInfection() {\r\n    return (\r\n\r\n        <div>\r\n            <FetchCountryAll globalCasesProps newCasesProps TeenCountriesProps />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\n\r\nclass Chart extends React.Component {\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displeyLegend: true,\r\n        legendPosition: 'right',\r\n        titleText: 'Wykres ilości zachorowań',\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n            const {newDeaths,active,activeNew,recovered,total,day,totalDeaths,tests,\r\n                Chart0,Chart1,Chart2,Chart3,Chart4,Chart5,Chart6,toDay} = this.props.item;\r\n        return (\r\n            <>\r\n            <div className=\"chart\">\r\n           \r\n\r\n\r\n            {this.props.bar&&<Bar\r\n            data={{\r\n                labels: [Chart0?'1day':'Nowe zgony', Chart0?'10day':'Nowe przypadki', Chart0?'20day':'Aktywni', Chart3?'30day':'Wszyscy', \r\n                Chart0?'40day':'wszystkie zgony', Chart0?'50day':'Wyzdrowiałych' , Chart0&&'60day', Chart0&&'toDay'] ,\r\n                datasets: [\r\n                    {\r\n                        label: 'Zainfekowanych osób wirusem Covid-19',\r\n                        data: [\r\n                            Chart0?Chart0:newDeaths,\r\n                            Chart1?Chart1:activeNew,\r\n                            Chart2?Chart2:active,\r\n                            Chart3?Chart3:total,\r\n                            Chart4?Chart4:totalDeaths,\r\n                            Chart5?Chart5:recovered,\r\n                            Chart6?Chart6:null,\r\n                            toDay?toDay:null,\r\n                        ],\r\n                        backgroundColor: [\r\n                            'rgba(10,99,132,0.6)',\r\n                            'rgba(50,99,132,0.6)',\r\n                            'rgba(100,99,132,0.6)',\r\n                            'rgba(255,159,64,0.6)',\r\n                            'rgba(255,255,64,0.6)',\r\n                            '#f1c40f',\r\n                            '#d35400',\r\n                            toDay?'#e74c3c':null,\r\n                            toDay?'#8e44ad':null,\r\n                        ],\r\n                        fontSize: 20,\r\n                    }\r\n                ],\r\n            }}\r\n            width={300}\r\n            height={200}\r\n       \r\n            options={{\r\n                \r\n                 title: {\r\n                    display: this.props.displayTitle,\r\n                    text:\"Wykres ilości zachorowań\",\r\n                     fontSize:16,\r\n                 },\r\n                 legend: {\r\n                     display: true,\r\n                     position: this.props.legendPosition,\r\n                     fontSize:30,\r\n                 },\r\n                 layout:{\r\n                     padding:{\r\n                         left:20,\r\n                         right:20,\r\n                         bottom:20,\r\n                         top:20,\r\n                     }\r\n                 }\r\n                 }}\r\n          />}\r\n\r\n          <div style={{padding:'10px'}}></div>\r\n\r\n          {this.props.line&&<Line\r\n            data={{\r\n                labels: ['1day', '10day', '20day', '30day', '40day', '50day' , '60day', 'toDay'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Zainfekowanych osób wirusem Covid-19',\r\n                        data: [\r\n                            Chart0?Chart0:newDeaths,\r\n                            Chart1?Chart1:activeNew,\r\n                            Chart2?Chart2:active,\r\n                            Chart3?Chart3:total,\r\n                            Chart4?Chart4:totalDeaths,\r\n                            Chart5?Chart5:recovered,\r\n                            Chart6?Chart6:null,\r\n                            toDay?toDay:null,\r\n                        ],\r\n                        backgroundColor: [\r\n                            'rgba(10,99,132,0.6)',\r\n                            'rgba(50,99,132,0.6)',\r\n                            'rgba(100,99,132,0.6)',\r\n                            'rgba(255,159,64,0.6)',\r\n                            'rgba(255,255,64,0.6)',\r\n                            'rgba(100,99,132,0.6)',\r\n                            'rgba(255,159,64,0.6)',\r\n                            'rgba(255,255,64,0.6)',\r\n                            \r\n                        ]\r\n                    }\r\n                ],\r\n            }}\r\n          width={300}\r\n          height={200}\r\n          \r\n          options={{\r\n              \r\n               title: {\r\n                  display: this.props.displayTitle,\r\n                   text:\"Wykres liniowy ilości zachorowań\",\r\n                   fontSize:16,\r\n               },\r\n               legend: {\r\n                   display: true,\r\n                   position: this.props.legendPosition,\r\n               },\r\n               layout:{\r\n                   padding:{\r\n                       left:20,\r\n                       right:20,\r\n                       bottom:20,\r\n                       top:20,\r\n                   }\r\n               }\r\n               }}\r\n        />}\r\n        <div style={{padding:'10px'}}></div>\r\n        \r\n        {this.props.pie&&<Pie\r\n            data={{\r\n                labels: [Chart0?'1day':'Nowe zgony', Chart0?'10day':'Nowe przypadki', Chart0?'20day':'Aktywni', Chart3?'30day':'Wszyscy', \r\n                Chart0?'40day':'wszystkie zgony', Chart0?'50day':'Wyzdrowiałych' , Chart0&&'60day', Chart0&&'toDay'] ,\r\n                datasets: [\r\n                    {\r\n                        label: 'Zainfekowanych osób wirusem Covid-19',\r\n                        data: [\r\n                            Chart0?Chart0:newDeaths,\r\n                            Chart1?Chart1:activeNew,\r\n                            Chart2?Chart2:active,\r\n                            Chart3?Chart3:total,\r\n                            Chart4?Chart4:totalDeaths,\r\n                            Chart5?Chart5:recovered,\r\n                            Chart6?Chart6:null,\r\n                            toDay?toDay:null,\r\n                        ],\r\n                        backgroundColor: [\r\n                            'rgba(10,99,132,0.6)',\r\n                            'rgba(50,99,132,0.6)',\r\n                            'rgba(100,99,132,0.6)',\r\n                            'rgba(255,159,64,0.6)',\r\n                            'rgba(255,255,64,0.6)',\r\n                            '#f1c40f',\r\n                            '#d35400',\r\n                            '#e74c3c',\r\n                            '#8e44ad',\r\n                        ]\r\n                    }\r\n                ],\r\n            }}\r\n          width={300}\r\n          height={200}\r\n          \r\n          options={{\r\n              \r\n               title: {\r\n                  display: this.props.displayTitle,\r\n                   text:\"diagram kołowy ilości zachorowań\",\r\n                   fontSize:20,\r\n               },\r\n               legend: {\r\n                   display: true,\r\n                   position: this.props.legendPosition,\r\n                   fontSize:30,\r\n               },\r\n               layout:{\r\n                   padding:{\r\n                       left:20,\r\n                       right:20,\r\n                       bottom:20,\r\n                       top:20,\r\n                   }\r\n               }\r\n               }}\r\n        />}\r\n\r\n            </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart; ","import React, { Component } from 'react'\r\nimport Chart from '../Chart/Chart';\r\nimport styled from 'styled-components';\r\nexport default class FetchStatisticPoland extends Component {\r\n   \r\n    state={\r\n        firstDay: '', tabsToChart: '', Chart0: '', Chart1: '', Chart2: '', Chart3: '', Chart4: '', Chart5: '', Chart6: '',\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.wykonaj()\r\n    }\r\n  \r\n    wykonaj = () => {\r\n        const api = 'https://api.covid19api.com/total/dayone/country/poland'\r\n        try {\r\n            fetch(api)\r\n            .then(api=> {\r\n                if(api.ok){\r\n                    return api\r\n                }\r\n                \r\n            })\r\n            .then(api => api.json())\r\n            .then(api => {\r\n                let tabsToChart = [];\r\n                for(var i=0; i<api.length; i=i+10){\r\n                    tabsToChart.push(api[i])\r\n                }\r\n               \r\n                this.setState({\r\n                    firstDay: api.length,\r\n                    tabsToChart,\r\n                    Chart0: parseInt(tabsToChart[0].Active),\r\n                    Chart1: tabsToChart[1].Active,\r\n                    Chart2: tabsToChart[2].Active,\r\n                    Chart3: tabsToChart[3].Active,\r\n                    Chart4: tabsToChart[4].Active,\r\n                    Chart5: tabsToChart[5].Active,\r\n                    Chart6: tabsToChart[6].Active,\r\n                    toDay: api[api.length-1].Active,\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            }\r\n        }\r\n   \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                    <StyledTitle>Ilość dni od rozpoczęcia pandemi w Polsce <StyledFirstDay>{this.state.firstDay}</StyledFirstDay></StyledTitle>\r\n                    <Chart item={this.state} legendPosition=\"top\" titleText=\"Wykres 5 dni pogody\" displayTitle bar pie line/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledTitle = styled.div`\r\n    text-align: center;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    padding-top: 20px;\r\n    color: white;\r\n    @media(min-width: 350px){\r\n        font-size: 16px;\r\n    }\r\n    @media(min-width: 600px){\r\n        font-size: 18px;\r\n    }\r\n`\r\nconst StyledFirstDay = styled.div`\r\n    width: 100px;\r\n    height: 50px;\r\n    border-radius: 15px;\r\n    background-color: #0a3d62;\r\n    font-family: 'Baloo 2',cursive;\r\n    font-weight: 800;\r\n    font-size: 20px;\r\n    padding-top: 10px;\r\n    margin: 10px auto;\r\n    color: white;\r\n    @media(min-width: 350px){\r\n        font-size: 22px;\r\n    }\r\n    @media(min-width: 600px){\r\n        font-size: 24px;\r\n        width: 140px;\r\n    }\r\n    \r\n\r\n` ","import React, {Component} from 'react'\r\nimport FetchCountryAll from '../../Fetch/FetchCountryAll';\r\nimport {StyledWrapperTitle,StyledTitle} from '../../Fetch/StyleFetch';\r\nimport FetchStatisticPoland from '../../Fetch/FetchStatisticPoland';\r\nexport default class MainPages extends Component {\r\n    \r\n\r\n    render() {\r\n\r\n      \r\n\r\n       \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <StyledWrapperTitle> <StyledTitle>Wszystkie przypadki wirusa Covid-19. Statystyki z całego świata.</StyledTitle></StyledWrapperTitle>\r\n                \r\n                <FetchCountryAll globalCasesProps StyledProps/>\r\n                <FetchStatisticPoland/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {StyledWrapper, StyledUl, StyledLi, StyledTitle, StyledWrapperTitle, LiStyl, UlStyl, DescriptionStyl} from './StyleFetch';\r\nimport styled from 'styled-components';\r\nimport LoadingIndicatior from '../Loading/LoadingIndicator';\r\n////////////Ogólnie zakarzenia w POLSCE \r\n\r\nexport default class FetchCountryPoland extends Component {\r\n\r\n        state = {\r\n            country: '',\r\n            newConfirmed: '',\r\n            newDead: '',\r\n            newRecovery: '',\r\n            totalInfection: '',\r\n            totalDead: '',\r\n            totalRecovery: '',\r\n            zmien: '',\r\n            globalNewConfirmed: '',\r\n            globalNewDead: '',\r\n            globalNewRecovered: '',\r\n            globalTotalConfirmed: '',\r\n            globalTotalDeaths: '',\r\n            globalTotalRecovered: '',\r\n        }\r\n        \r\n        componentDidMount(){\r\n            this.performSummary();\r\n        }\r\n\r\n        performSummary = () => {\r\n\r\n            const api = 'https://api.covid19api.com/summary'\r\n            try {\r\n                \r\n                fetch(api)\r\n                .then(api=> {\r\n                    if(api.ok){\r\n                        return api\r\n                    }\r\n                    \r\n                })\r\n                \r\n                .then(api => api.json())\r\n                .then(api => {\r\n                    console.log(api)\r\n                    this.setState(() =>  ({\r\n                        country: api.Countries[132].Country,\r\n                        newConfirmed: api.Countries[132].NewConfirmed, //nowe potwierdzone przypadki\r\n                        newDead: api.Countries[132].NewDeaths,\r\n                        newRecovery: api.Countries[132].NewRecovered,\r\n                        totalInfection: api.Countries[132].TotalConfirmed,\r\n                        totalDead: api.Countries[132].TotalDeaths,\r\n                        totalRecovery: api.Countries[132].TotalRecovered,\r\n\r\n                        globalNewConfirmed: api.Global.NewConfirmed,\r\n                        globalNewDead: api.Global.NewDeaths,\r\n                        globalNewRecovered: api.Global.NewRecovered,\r\n                        globalTotalConfirmed: api.Global.TotalConfirmed,\r\n                        globalTotalDeaths: api.Global.TotalDeaths,\r\n                        globalTotalRecovered: api.Global.TotalRecovered,\r\n                    }))\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n            } catch (error) {\r\n                console.log(error , \"FetchCounryPoland\")\r\n            }\r\n            }\r\n    render() {\r\n\r\n        const {country, newConfirmed, newDead, newRecovery, totalInfection, totalDead, totalRecovery,\r\n            globalNewConfirmed, globalNewDead, globalNewRecovered, globalTotalConfirmed, globalTotalDeaths, globalTotalRecovered} = this.state;\r\n\r\n\r\n            const polishInfo = (\r\n                <div>\r\n                    <StyledWrapperTitle><StyledTitle style={{color:'white'}}>Dzisiejsze informacje o COVID-19 w Polsce.</StyledTitle></StyledWrapperTitle>\r\n                    <UlStyl style={{paddingTop: '10px'}}>\r\n                        <LiStyl><b>Dzisiaj zarażeni: </b></LiStyl> <DescriptionStyl>{newConfirmed} osób</DescriptionStyl>\r\n                        <LiStyl><b>Dzisiejsze zgony:</b></LiStyl> <DescriptionStyl>{newDead} osób</DescriptionStyl>\r\n                        <LiStyl><b>Uzdrowieni:</b> </LiStyl> <DescriptionStyl>{newRecovery} osób</DescriptionStyl>\r\n                    </UlStyl>\r\n\r\n                    <UlStyl>\r\n                        <LiStyl><b>Wszyscy zarażeni:</b></LiStyl> <DescriptionStyl>{totalInfection} osób</DescriptionStyl>\r\n                        <LiStyl><b>Wszystkie zgony:</b></LiStyl> <DescriptionStyl> {totalDead} osób</DescriptionStyl>\r\n                        <LiStyl><b>Wszyscy uzdrowieni:</b></LiStyl> <DescriptionStyl>{totalRecovery} osób</DescriptionStyl>\r\n                    </UlStyl>\r\n                </div>\r\n            )\r\n\r\n            const global =  (\r\n                    <>\r\n                    <StyledTitle>Dane globalne.</StyledTitle>\r\n                    <StyledUl>\r\n                        <StyledLi><b>Nowi zarażeni:</b> {globalNewConfirmed} osób</StyledLi>\r\n                        <StyledLi><b>Nowe zgony: </b>{globalNewDead} osób</StyledLi>\r\n                        <StyledLi><b>Nowi uzdrowieni:</b> {globalNewRecovered} osób</StyledLi>\r\n                    </StyledUl>\r\n                    <StyledUl>\r\n                        <StyledLi><b>Nowi uzdrowieni:</b> {globalTotalConfirmed} osób</StyledLi>\r\n                        <StyledLi><b>Wszysctkie zgony:</b> {globalTotalDeaths} osób</StyledLi>\r\n                        <StyledLi><b>Wszyscy uzdrowieni:</b> {globalTotalRecovered} osób</StyledLi>\r\n                    </StyledUl>\r\n                    </>\r\n            )\r\n        return (\r\n            <StyledWrapper>\r\n                    {globalNewConfirmed?this.props.poland?polishInfo:null: <StyledTitle><LoadingIndicatior></LoadingIndicatior></StyledTitle>}\r\n                <div>\r\n                    {globalTotalConfirmed?this.props.global&&global: null}\r\n                </div>\r\n            </StyledWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n// import { groupBy } from 'lodash';\r\nimport { StyledWrapper, StyledTitle, StyledWrapperTitle, LiStyl, UlStyl, DescriptionStyl} from './StyleFetch';\r\nimport styled from 'styled-components';\r\n\r\n////////////Ogólnie zakarzenia w POLSCE \r\n\r\nexport default class FetchCountryPolandProvince extends Component {\r\n\r\n        state = {\r\n            lubelskieInfected: '',\r\n            LubelskieDead: '',\r\n            all: [],\r\n        }\r\n        \r\n        componentDidMount(){\r\n            this.performProvince();\r\n        }\r\n\r\n        performProvince = () => {\r\n\r\n            const api = 'https://api.apify.com/v2/key-value-stores/3Po6TV7wTht4vIEid/records/LATEST?disableRedirect=true'\r\n            \r\n            try {\r\n                fetch(api)\r\n                .then(api=> {\r\n                    if(api.ok){\r\n                        return api\r\n                    }\r\n                    \r\n                })\r\n                .then(api => api.json())\r\n                .then(api => {\r\n                    this.setState({\r\n                        lubelskieInfected: api.infectedByRegion[2].infectedCount,\r\n                        LubelskieDead: api.infectedByRegion[2].deceasedCount,\r\n                        all: api.infectedByRegion,\r\n                    })\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n                }\r\n            }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const wypisz = () => (\r\n            <div>\r\n                \r\n               {this.state.all.map((item,index)=> {\r\n\r\n                   return <StyledUl key={item.region}>\r\n                        <StyledLi><b>Województwo: {item.region}</b></StyledLi>\r\n                        <StyledLi>Zainfekowanych: {item.infectedCount} osób.</StyledLi>\r\n                        <StyledLi>Zmarłych: {item.deceasedCount} osób.</StyledLi>\r\n\r\n                   </StyledUl>\r\n               })}\r\n            </div>\r\n        )\r\n        \r\n        return (\r\n            <StyledWrapper >\r\n                <StyledWrapperTitle><StyledTitle>Informacje szczegółowe w województwach</StyledTitle></StyledWrapperTitle>\r\n                {wypisz()}\r\n                \r\n            </StyledWrapper>\r\n        )\r\n    }\r\n}\r\nconst StyledLi = styled.li`\r\n    margin: 10px 0;\r\n    color:white;\r\n    text-align: center;\r\n    font-family: 'Baloo 2', cursive;\r\n`\r\nconst StyledUl = styled.ul`\r\n    background-color: #27293d;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    width: 80%;\r\n    max-width: 600px;\r\n    padding: 15px 0;\r\n    margin: 40px auto;\r\n    border-radius: 10px;\r\n    /* box-shadow: 0px 0px 15px 8px rgba(245,245,2451); */\r\n    font-family: 'Baloo 2', cursive;\r\n    font-size: 15px;\r\n    @media(min-width: 400px) {\r\n        font-size: 16px;\r\n    }\r\n    @media(min-width: 600px) {\r\n        font-size: 18px;\r\n    }\r\n`\r\n\r\n","import React from 'react'\r\nimport FetchCountryPoland from '../../Fetch/FetchCountryPoland';\r\nimport FetchCountryPolandProvince from '../../Fetch/FetchCountryPolandProvince';\r\n\r\nexport default function ToDayInfection() {\r\n \r\n    return (\r\n        <>\r\n            <FetchCountryPoland poland/>\r\n            <FetchCountryPolandProvince/>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//  {/* <div>\r\n//                         MOzna poleciec po wszystkich danych i sprawdzić gdzie najwieksza jest totalConfirmed i wyswietlić 5bnajwiekszych\r\n//                     </div>\r\n//                     <div>\r\n//                         W ktorym dniu bylo najwiecej w Polsce\r\n//                     </div>\r\n//                     <div>Ile juz dni w polsce jest corona</div>\r\n//                     <div>Wysukiwanie po dacie i sprawdzenie ile bylo przypadkow i ile zgonów w Polsce </div> */}","\r\nimport React, { Component } from 'react'\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default class Navbar extends Component {\r\n\r\n\r\n  changeNavbar = () => {\r\n    var x = document.getElementById(\"myTopnav\");\r\n    console.log(x.className)\r\n    if (x.className === \"topnav\") {\r\n      x.className += \" responsive\";\r\n    } else {\r\n      x.className = \"topnav\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n\r\n  <StyledTopNav>\r\n    <div className=\"topnav\" id=\"myTopnav\">\r\n\r\n        <StyledLi><NavLink exact to='/'  style={{color:'#95a5a6'}}   activeStyle={{fontWeight: \"700\",color: \"#ecf0f1\"}} className=\"active\">\r\n            Strona główna\r\n        </NavLink></StyledLi>\r\n        <StyledLi><NavLink exact to=\"/wszystkie\" style={{color:'#95a5a6'}} activeStyle={{fontWeight: \"700\",color: \"#ecf0f1\"}}  className=\"\">\r\n            Wszystkie zakażenia\r\n        </NavLink></StyledLi> \r\n        <StyledLi><NavLink exact to='/dzisiaj' style={{color:'#95a5a6'}} activeStyle={{fontWeight: \"700\",color: \"#ecf0f1\"}} className=\"\">\r\n            Zakażenia w Polsce\r\n        </NavLink></StyledLi>\r\n        <StyledLi><NavLink exact to='/kraj' style={{color:'#95a5a6'}} activeStyle={{fontWeight: \"700\",color: \"#ecf0f1\"}} className=\"\">\r\n            Zakażenia w kraju  \r\n        </NavLink></StyledLi>\r\n        <li  className=\"icon\" onClick={this.changeNavbar}>\r\n          <i className=\"fa fa-bars\"></i>\r\n        </li>\r\n      </div>\r\n\r\n  </StyledTopNav>\r\n\r\n      \r\n\r\n    );\r\n  }\r\n};\r\n\r\nconst StyledTopNav = styled.nav`\r\n   \r\n.topnav {\r\n  overflow: hidden;\r\n  background-color: #333;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.topnav li {\r\n  float: left;\r\n  display: flex;\r\n  color: #f2f2f2;\r\n  text-align: center;\r\n  padding: 14px 16px;\r\n  width: 200px;\r\n  text-decoration: none;\r\n  font-size: 17px;\r\n}\r\n\r\n.topnav li:hover {\r\n  background-color: #4444;\r\n  color: black;\r\n}\r\n\r\n.topnav .icon {\r\n  display: none;\r\n  width: 70px;\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n  .topnav li:not(:first-child) {display: none;}\r\n  .topnav li.icon {\r\n    float: right;\r\n    display: block;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n  .topnav.responsive {position: relative;    justify-content: left;}\r\n  .topnav.responsive .icon {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 70px;\r\n    margin-right: 10px;\r\n  }\r\n  .topnav.responsive li {\r\n    float: none;\r\n    display: block;\r\n    width: 70%;\r\n    text-align: left;\r\n    flex-wrap: wrap;\r\n  }\r\n}\r\n\r\n`\r\n\r\n\r\n\r\n\r\nconst StyledLi = styled.li`\r\n  text-decoration: none;\r\n  list-style: none;\r\n`","import React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {StyledWrapperTitle,StyledTitle} from '../../Fetch/StyleFetch';\r\nimport styled from 'styled-components';\r\nimport LoadingIndicatior from '../../Loading/LoadingIndicator';\r\nexport default class Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StyledTitle style={{fontSize:'30px', color:'white'}}>błąd 404</StyledTitle>\r\n                 <StyledWrapperTitle style={{margin: '20px auto 50px'}}><StyledTitle>Strona o podanym adresie <StyledSpan>{this.props.location.pathname}/</StyledSpan> nie istnieje  </StyledTitle></StyledWrapperTitle>   \r\n                <StyledButton> <NavLink style={{color: 'white'}} to=\"/\">Strona główna</NavLink></StyledButton>\r\n                 <Styleddiv><i className=\"fas fa-virus\" style={{width: '100px', height:'100px'}}></i></Styleddiv>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Styleddiv = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 30px auto;\r\n    transition-delay: 4s;\r\n    animation-duration: 6s;\r\n    animation-iteration-count: infinite;\r\n    animation-direction: alternate;\r\n    animation-name: example, delay ;\r\n    color: white;\r\n\r\n\r\n    /* wolny start */\r\n    animation-timing-function: ease-in; \r\n\r\n    @keyframes example {\r\n        from { transform: rotate(0deg)}\r\n        to { transform: rotate(360deg)}\r\n    }\r\n`\r\n\r\nconst StyledSpan = styled.span`\r\n    font-family: 'Baloo 2',cursive;\r\n    font-size: 20px;\r\n`\r\nconst StyledButton = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    width: 150px;\r\n    height: 50px;\r\n    padding: 10px 20px;\r\n    text-align: center;\r\n    background-color: #2c3e50;\r\n    border-radius: 10px;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    margin: 10px auto 40px;\r\n\r\n`\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport Chart from '../Chart/Chart';\r\nexport default class FetchCountryRandom extends Component {\r\n\r\n    state={\r\n        country: 'Italy',\r\n        active: ''\r\n        ,activeNew: ''\r\n        ,recovered: ''\r\n        ,total: ''\r\n        ,day: ''\r\n        ,totalDeaths: ''\r\n        ,newDeaths: ''\r\n        ,tests: '',\r\n        error: true,\r\n        countryApi: '',\r\n    }\r\n\r\n    fetchCountry = () => {\r\n\r\n        fetch(`https://covid-193.p.rapidapi.com/statistics?country=${this.state.country}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"40ddf12a2emsh06a2fa2ebef5ecbp10fb02jsn4827ba559849\"\r\n            }\r\n        })\r\n    .then(api=> {\r\n        if(api.ok){\r\n            return api\r\n        }\r\n    })\r\n    .then(api => api.json())\r\n    .then(api => {\r\n       this.setState({\r\n           error: true,\r\n           active: api.response[0].cases.active,\r\n           activeNew: api.response[0].cases.new,\r\n           recovered: api.response[0].cases.recovered,\r\n           total: api.response[0].cases.total,\r\n\r\n           day: api.response[0].day,\r\n\r\n           totalDeaths: api.response[0].deaths.total,\r\n           newDeaths: api.response[0].deaths.new,\r\n           tests: api.response[0].tests.total,\r\n            countryApi: api.response[0].country,\r\n       })\r\n       \r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n            error: false,\r\n            active: '',\r\n            countryApi: '',\r\n        })\r\n    });\r\n}\r\n    changeInput = (e) => {\r\n        if(e.target.value.length>3){\r\n            this.setState({\r\n                country: e.target.value,\r\n                \r\n            })\r\n        }\r\n    }\r\n    sumbit = () => {\r\n        this.fetchCountry()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n            const {country, active, activeNew, recovered, total, day, totalDeaths, newDeaths, tests, error, countryApi} = this.state;\r\n        return (\r\n            <div>\r\n                <StyledWrapper>\r\n                    <input placeholder=\"Italy\" type=\"text\" onChange={this.changeInput}></input>\r\n                    <button onClick={this.sumbit}>Wyszukaj</button>\r\n                </StyledWrapper>\r\n               \r\n                <StyledContainer>\r\n                    \r\n                {countryApi!==\"\"?<>\r\n                    \r\n                    <StyledCard>\r\n                    <StyledH2>Wyniki wyszukiwania dla: {countryApi}</StyledH2>\r\n                            <StyledH3>Aktywne przypadki covid-19</StyledH3>\r\n                        <div>\r\n                            <StyledActive>\r\n                                {total}\r\n                                \r\n                                <p>Wszystkich</p>\r\n                            </StyledActive>\r\n                            <StyledSpanLeft>\r\n                                <p style={{fontFamily:'Rancho'}}>\r\n                                    {activeNew}\r\n                                    <span style={{color:'white',fontSize:'14px'}}>({((activeNew*100)/active).toFixed(1)})%</span> \r\n                                    </p>\r\n                                <p>Nowych</p>\r\n                            </StyledSpanLeft>\r\n                            <StyledSpanRight>\r\n                                <p style={{fontFamily:'Rancho'}}>\r\n                                    {active}\r\n                                    <span style={{color:'white',fontSize:'14px'}}>({((active*100)/total).toFixed(1)})%</span> \r\n                                    </p>\r\n                                <p>Aktywnych</p>\r\n                            </StyledSpanRight>\r\n                        </div>\r\n                    </StyledCard>\r\n\r\n                    <StyledCard>\r\n                        <StyledH3>Zgony spowodowane wirusem</StyledH3>\r\n                        <div>\r\n                            <StyledActive>\r\n                                <span style={{color: 'red'}}>{totalDeaths}</span>\r\n                                <span style={{color:'white',fontSize:'14px', marginLeft: '1px'}}>({((totalDeaths*100)/total).toFixed(1)})%</span>\r\n                                <p>Wszystkie zgony</p>\r\n                            </StyledActive>\r\n                            <StyledSpanLeft>\r\n                                <p style={{fontFamily:'Rancho'}}>{newDeaths} <span style={{color:'white',fontSize:'14px', marginLeft: '1px'}}>({((newDeaths*100)/totalDeaths).toFixed(1)})%</span></p>\r\n                                <p>Nowe zgony</p>\r\n                            </StyledSpanLeft>\r\n                            <StyledSpanRight>\r\n                                <p style={{fontFamily:'Rancho'}}>\r\n                                    {recovered}\r\n                                    <span style={{color:'white',fontSize:'14px', marginLeft: '1px'}}>({((recovered*100)/total).toFixed(1)})%</span>\r\n                                    </p>\r\n                                <p>Wyzdrowiałych</p>\r\n                            </StyledSpanRight>\r\n                        </div>\r\n                    </StyledCard>\r\n\r\n                    <StyledCard>\r\n                    <StyledH3>Informacje ogólne</StyledH3>\r\n                        <div>\r\n                        <StyledActive>\r\n                            <p>Aktualizacje z</p>\r\n                            {day}\r\n                            </StyledActive>\r\n                            <StyledSpanLeft>\r\n                                <p style={{fontFamily:'Rancho'}}>{tests}</p>\r\n                                <p>Zrobione testy</p>\r\n                            </StyledSpanLeft>\r\n                            <StyledSpanRight>\r\n                                <p style={{fontFamily:'Rancho'}}>{tests-tests/10}</p>\r\n                                <p>Ilość testów</p>\r\n                            </StyledSpanRight>\r\n                        </div>\r\n                    </StyledCard>\r\n\r\n                    \r\n                </>: !error? `Nie ma takiego państwa \"${country}\"` : `Wpisz państwo`}\r\n                </StyledContainer>\r\n                {active!==\"\" && <Chart item={this.state} legendPosition=\"top\" titleText=\"Wykres 5 dni pogody\" displayTitle bar pie />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledH2 = styled.h2`\r\n    font-size: 18px;\r\n    padding: 10px auto;\r\n`\r\nconst StyledActive = styled.div`\r\n    font-size: 22px;\r\n    padding-top: 15px;\r\n    border: 1px solid #ddd;\r\n    p{\r\n        font-size: 20px;\r\n    }\r\n`\r\nconst StyledSpanLeft = styled.span`\r\n    float: left;\r\n    width: 50%;\r\n    font-size: 20px;\r\n    border: 1px solid #ddd;\r\n    color: white;\r\n    border-bottom-left-radius: 10px;\r\n    p:nth-child(1){\r\n        color: red;\r\n        margin: 10px 0;\r\n        font-size: 30px;\r\n    }\r\n`\r\nconst StyledSpanRight = styled.span`\r\n    float: right;\r\n    width: 50%;\r\n    font-size: 20px;\r\n    border: 1px solid #ddd;\r\n    color:white;\r\n    border-bottom-right-radius: 10px;\r\n    p:nth-child(1){\r\n        color: red;\r\n        margin: 10px 0;\r\n        font-size: 30px;\r\n    }\r\n`\r\nconst StyledLi = styled.li`\r\n    text-decoration: none;\r\n    list-style: none;\r\n    padding: 10px;\r\n\r\n`\r\nconst StyledCard = styled.div`\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n`\r\nconst StyledContainer = styled.div`\r\n\r\n    display: grid;\r\n    grid-template-columns: 300px;\r\n    grid-template-rows: repeat(3, auto);\r\n    grid-row-gap: 80px;\r\n    width: 300px;\r\n    min-width: 300px;\r\n    margin: 40px auto;\r\n    text-align: center;\r\n    color: white;\r\n    font-family: 'Baloo 2',cursive;\r\n\r\n`\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 300px;\r\n    max-width: 600px;\r\n    margin: 40px auto;\r\n    text-align: center;\r\n`\r\n\r\nconst StyledH3 = styled.div`\r\n      background-color: #ddd;\r\n        color: black;\r\n        width:100%;\r\n        padding: 10px;\r\n        border-top-right-radius: 10px;\r\n        border-top-left-radius: 10px;\r\n`","import React, { Component } from 'react'\r\nimport FetchCountryRandom from '../../Fetch/FetchCountryRandom';\r\nexport default class Country extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <FetchCountryRandom/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, HashRouter, hashHistory } from 'react-router-dom';\nimport AllInfection from './components/Pages/AllInfection/AllInfection';\nimport MainPages from './components/Pages/MainPages/MainPages';\nimport ToDayInfection from './components/Pages/ToDayInfection/ToDayInfection';\nimport Navbar from './components/Pages/Navbar/Navbar';\nimport Error from './components/Pages/404/Error';\nimport Country from './components/Pages/Country/Country';\nfunction App() {\n  return (\n\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n            <Navbar/>\n        </div>\n        <Switch>\n          <Route exact path='/' component={MainPages}></Route>\n          <Route exact path='/wszystkie' component={AllInfection}></Route>\n          <Route exact path='/dzisiaj' component={ToDayInfection}></Route>\n          <Route exact path='/kraj' component={Country}></Route>\n          {/* <Route exact path={process.env.PUBLIC_URL + '/dzisiaj'} component={ToDayInfection}></Route> */}\n          <Route component={Error}></Route>\n        </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n//https://app.netlify.com/sites/koronavirus-19/deploys \n//szkapec2"],"sourceRoot":""}